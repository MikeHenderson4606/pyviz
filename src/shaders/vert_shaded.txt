# version 410 core

layout (location=0) in vec3 vertexPos;
layout (location=1) in vec3 aNormal;
layout (location=2) in vec3 vertexColor;

out vec3 fragmentPosition;
out vec3 fragmentColor;
out vec3 Normal;

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;

void main() {
    vec4 pos = projection * view * model * vec4(vertexPos, 1.0f);

    gl_Position = pos;

    Normal = mat3(transpose(inverse(model))) * aNormal;  
    fragmentPosition = vec3(model * vec4(vertexPos, 1.0));
    fragmentColor = vertexColor;
}